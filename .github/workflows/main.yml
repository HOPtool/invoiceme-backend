# This is a basic workflow to help you get started with Actions

name: hoptool-invoiceme-be

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the develop branch
  push:
    branches: [ dev ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
# A workflow run is made up of one or more jobs that can run sequentially or in parallel

env:
  IMAGE_TAG: $(echo $GITHUB_SHA | head -c7)
  DOCR_ENDPOINT: "registry.digitalocean.com/hoptool/hoptool-invoiceme-be"
  DIGITALOCEAN_ACCESS_TOKEN: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
  PROJECT_NAME: "hoptool-invoiceme-be"
  CLUSTER_NAME: "hoptool-cluster"
  REGION: "FRA1"
  REPO_NAME: hoptool-invoiceme-be
  
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3                 
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
          
      - name: Build container image
        run: docker build -t $DOCR_ENDPOINT:$(echo $GITHUB_SHA | head -c7) .

      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 1200
        
      - name: Push image to DigitalOcean Container Registry
        run: docker push $DOCR_ENDPOINT:$(echo $GITHUB_SHA | head -c7)
        
      - name: Update deployment file
        run: TAG=$(echo $GITHUB_SHA | head -c7) && sed -i 's|<IMAGE>|registry.digitalocean.com/hoptool/hoptool-invoiceme-be:'${TAG}'|' $GITHUB_WORKSPACE/manifests/deployment.yaml
        
      - name: Save DigitalOcean kubeconfig with short-lived credentials
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 $CLUSTER_NAME
        
      - name: Deploy to DigitalOcean Kubernetes
        run: |
          kubectl apply -f $GITHUB_WORKSPACE/manifests/deployment.yaml
          kubectl apply -f $GITHUB_WORKSPACE/manifests/service.yaml
          kubectl apply -f $GITHUB_WORKSPACE/manifests/ingress-https.yaml
